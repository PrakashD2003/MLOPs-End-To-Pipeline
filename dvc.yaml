# This file defines pipeline stages, each of which represents a step in your ML workflow 
# (like ingestion, processing, training, evaluation). DVC uses this file to track dependencies, outputs, and commands.

stages:
  # Stage 1: Data Ingestion
  1_Data_Ingestion:
    # Command to run this stage
    cmd: python ./src/1_Data_ingestion.py

    # Dependencies: files that this stage depends on
    deps:
    - ./src/1_Data_ingestion.py  # The script that does data ingestion
    # (Optional) You could include parameters here if you want to tune them via params.yaml
    params:
    - 1_Data_Ingestion.test_size

    # Outputs: directories or files that are generated by this stage
    outs:
    - ./data/raw  # Raw data will be saved here

  # Stage 2: Data Preprocessing
  2_Pre_Processing:
    cmd: python ./src/2_Pre_Processing.py
    deps:
    - ./data/raw  # Depends on raw data from the previous stage
    - ./src/2_Pre_Processing.py  # Preprocessing script
    outs:
    - ./data/interim  # Outputs intermediate (cleaned) data

  # Stage 3: Feature Engineering
  3_Feature_Engineering:
    cmd: python ./src/3_Feature_Engineering.py
    deps:
    - ./data/interim  # Uses the preprocessed data
    - ./src/3_Feature_Engineering.py  # Script for feature engineering
    # Optional parameters for this stage
    params:
    - 3_Feature_Engineering.max_features

    outs:
    - ./data/Processed  # Final processed data ready for modeling

  # Stage 4: Model Training
  4_Model_Training:
    cmd: python ./src/4_Model_Training.py
    deps:
    - ./data/Processed  # Uses the engineered features
    - ./src/4_Model_Training.py  # Script for training the model
    # Optional hyperparameters
    params:
    - 4_Model_Training.n_estimators
    - 4_Model_Training.random_state

    outs:
    - ./models/model.pkl  # Trained model file

  # Stage 5: Model Evaluation
  5_Model_Evaluation:
    cmd: python ./src/5_Model_Evaluation.py
    deps:
    - ./data/Processed  # Same processed data for evaluation
    - ./models/model.pkl  # Trained model
    - ./src/5_Model_Evaluation.py  # Evaluation script
    # Metrics generated by the script that will be tracked by DVC
    metrics:
    - ./reports/metrics.json  # Evaluation results stored in JSON format
params:
- dvclive/params.yaml
metrics:
- dvclive/metrics.json
plots:
- dvclive/plots/metrics:
    x: step
